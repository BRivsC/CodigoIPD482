---
description: Recomienda registrar decisiones arquitectónicas o de diseño importantes utilizando un formato como Architecture Decision Records (ADRs) para preservar el contexto y la justificación.
globs: 
alwaysApply: false
---
- **Registrar Decisiones Significativas:** Documenta las decisiones de diseño o arquitectura que tengan un impacto considerable en el sistema, su estructura, o sus propiedades no funcionales (rendimiento, seguridad, etc.).[19, 20]
- **Contexto y Problema:** Describe el problema que la decisión busca resolver y el contexto en el que se tomó.
- **Alternativas Consideradas:** Enumera las principales alternativas que se evaluaron, junto con sus pros y contras.
- **Decisión Tomada y Justificación:** Establece claramente la decisión final y la razón principal por la que se eligió sobre las alternativas.
- **Consecuencias:** Describe las consecuencias esperadas de la decisión (positivas y negativas), incluyendo el impacto en otros componentes, el equipo, o los requisitos.
- **Formato Estándar (ADR):** Utiliza una plantilla simple y consistente para los ADRs. Un ADR es un documento breve que captura una decisión arquitectónica.

Las decisiones de diseño importantes se toman basándose en un contexto específico, compromisos y objetivos en un momento dado. Esta justificación a menudo se pierde con el tiempo a medida que los miembros del equipo cambian o los detalles se olvidan. Sin entender el "porqué" original, las modificaciones futuras podrían socavar inadvertidamente principios arquitectónicos clave, reintroducir problemas ya resueltos o llevar a una "deriva arquitectónica". Los ADRs proporcionan un registro histórico conciso de estas decisiones y su razonamiento, ayudando a mantener la integridad arquitectónica, facilitar la incorporación de nuevos miembros al equipo y evitar repetir errores del pasado.

- **Plantilla Sugerida para un ADR (Architecture Decision Record):**

| Campo | Descripción |
|-----------------------|------------------------------------------------------------------------------------------------------------|
| **Título** | Un título breve y descriptivo para la decisión (ej. "Uso de Base de Datos NoSQL para Perfiles de Usuario"). |
| **Número de ADR** | Identificador único secuencial. |
| **Fecha** | Fecha en que se tomó la decisión. |
| **Estado** | Ej. Propuesto, Aceptado, Rechazado, Deprecado, Reemplazado por ADR-XXX. |
| **Contexto** | ¿Cuál es el problema que estamos resolviendo o la situación que requiere una decisión? |
| **Decisión** | ¿Cuál es la solución o el enfoque que hemos elegido? |
| **Justificación** | ¿Por qué elegimos esta solución? ¿Qué factores influyeron? ¿Cuáles son los pros? |
| **Alternativas Consideradas** | ¿Qué otras opciones se evaluaron? ¿Por qué no se eligieron? (Brevemente) |
| **Consecuencias** | ¿Cuáles son los resultados esperados de esta decisión (positivos y negativos)? ¿Impacto en otras áreas? |
| **Notas/Referencias** | Enlaces a documentación relevante, discusiones, etc. |

- **Ejemplo de Contenido (Conceptual):**
  ```md
  ## ADR-001: Adopción de Microservicios para el Módulo de Pedidos

  **Fecha:** 2023-10-26
  **Estado:** Aceptado

  **Contexto:**
  El módulo de pedidos monolítico actual está experimentando cuellos de botella de rendimiento bajo alta carga y es difícil de escalar y mantener independientemente del resto de la aplicación. Los cambios en el módulo de pedidos requieren un redespliegue completo del sistema.

  **Decisión:**
  Se refactorizará el módulo de pedidos como un conjunto de microservicios independientes (ej. Servicio de Creación de Pedidos, Servicio de Estado de Pedidos, Servicio de Inventario de Pedidos). La comunicación se realizará a través de una API Gateway y posiblemente mensajería asíncrona.

  **Justificación:**
  - **Escalabilidad Independiente:** Cada microservicio podrá escalarse según sus necesidades específicas.
  - **Despliegue Independiente:** Los cambios en un microservicio de pedidos no requerirán el redespliegue de toda la aplicación.
  - **Resiliencia:** Un fallo en un microservicio tendrá un impacto limitado en comparación con un fallo en el monolito.
  - **Tecnología Específica:** Permite elegir la tecnología más adecuada para cada microservicio.

  **Alternativas Consideradas:**
  1.  **Optimizar el Monolito Actual:** Menor esfuerzo inicial, pero no resuelve los problemas fundamentales de escalabilidad y acoplamiento a largo plazo.
  2.  **Separar como un Módulo Más Grande (Mini-servicio):** Menos complejo que microservicios completos, pero podría no ofrecer la misma granularidad de escalamiento.

  **Consecuencias:**
  - Aumento de la complejidad operativa (gestión de múltiples servicios, observabilidad).
  - Necesidad de establecer una comunicación inter-servicios robusta.
  - Curva de aprendizaje para el equipo en arquitecturas de microservicios.
  - Potencial mejora significativa en rendimiento y escalabilidad del procesamiento de pedidos.
