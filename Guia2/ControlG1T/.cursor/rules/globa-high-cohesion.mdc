---
description: Asegura que los elementos dentro de un módulo estén fuertemente relacionados y enfocados en una única funcionalidad bien definida, mejorando la comprensibilidad y mantenibilidad.
globs: 
alwaysApply: false
---
# Alta Cohesión: Agrupar Responsabilidades Relacionadas

- **Propósito Enfocado:** Todos los elementos (funciones, datos) dentro de un módulo deben contribuir a un propósito único y bien definido para ese módulo.[10, 11]
- **Relación Fuerte:** Las responsabilidades agrupadas dentro de un módulo deben estar lógicamente relacionadas y operar sobre los mismos datos o conceptos.
- **Evitar Módulos "Cajón de Sastre":** No crees módulos que contengan una colección de funcionalidades dispares y no relacionadas (baja cohesión).

Los módulos con alta cohesión son más fáciles de entender porque su propósito es claro y limitado. El mantenimiento se simplifica porque los cambios relacionados con una funcionalidad específica tienden a estar contenidos dentro de un único módulo. Además, los módulos cohesivos son más propensos a ser reutilizables, ya que encapsulan una pieza de funcionalidad completa y bien definida. La alta cohesión está directamente relacionada con el Principio de Responsabilidad Única (SRP): un módulo que hace una cosa bien (SRP) naturalmente tendrá elementos fuertemente relacionados (alta cohesión).

- **Ejemplo (Conceptual - Módulo de gestión de usuarios):**

// Módulo de Usuario Altamente Cohesivo:
// Contiene funcionalidades relacionadas con la entidad Usuario.
ModuloUsuario:
- funcion crearUsuario(datos)
- funcion obtenerUsuarioPorId(id)
- funcion actualizarPerfilUsuario(id, nuevosDatos)
- funcion cambiarContraseña(id, contraseñaActual, nuevaContraseña)
- funcion validarCredenciales(email, contraseña)

// Módulo de Baja Cohesión (Ejemplo de lo que NO hacer):
ModuloUtilidadesVarias:
- funcion formatearFecha(fecha)       // Relacionado con fechas
- funcion enviarEmail(destinatario, asunto, cuerpo) // Relacionado con emails
- funcion calcularDistanciaEntrePuntos(p1, p2) // Relacionado con geometría
- funcion obtenerConfiguracionDeUsuario(id) // Relacionado con usuarios